{
	"id": "f2a720819dc74f8d61cf6809ce4f9c3d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"BeggingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n//作业三-捐赠合约\ncontract BeggingContract is Ownable {\n    //记录\n    mapping(address=>uint256) public records;\n    //捐赠余额 eth\n    uint256 public totalBalance;\n\n    constructor() Ownable(msg.sender){\n\n    }\n    event EventDonateSuccess(address from,uint256 value,uint256 timestamp);\n    event EventWithDraw(address user,uint256 amount,uint256 timestamp);\n    receive() external payable { }\n\n    //捐赠\n    function donate() public payable {\n        require(msg.value>0,\"insufficient payment\");\n        records[msg.sender]+=msg.value;\n        totalBalance += msg.value;\n        emit EventDonateSuccess(msg.sender,msg.value,block.timestamp);\n    }\n\n    //查询捐赠记录\n    function getDonation(address from) public view returns(uint256 amount){\n        return records[from];\n    }\n\n    //取款---只有合约所有人才可\n    function withDraw() public onlyOwner{\n        uint256 balance=address(this).balance;\n        require(balance>0,\"not sufficient balance\");\n        payable(msg.sender).transfer(balance);\n        // (bool success,) =msg.sender.call{value:balance}();\n        totalBalance=0;\n        emit EventWithDraw(msg.sender,balance,block.timestamp);\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BeggingContract.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "EventDonateSuccess",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "EventWithDraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "records",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BeggingContract.sol\":137:1307  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"BeggingContract.sol\":295:336  constructor() Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"BeggingContract.sol\":317:327  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"BeggingContract.sol\":137:1307  contract BeggingContract is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"BeggingContract.sol\":137:1307  contract BeggingContract is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BeggingContract.sol\":137:1307  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xad7a672f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x469e9067\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"BeggingContract.sol\":964:1304  function withDraw() public onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"BeggingContract.sol\":808:915  function getDonation(address from) public view returns(uint256 amount){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BeggingContract.sol\":192:232  mapping(address=>uint256) public records */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BeggingContract.sol\":261:288  uint256 public totalBalance */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BeggingContract.sol\":538:777  function donate() public payable {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"BeggingContract.sol\":964:1304  function withDraw() public onlyOwner{... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"BeggingContract.sol\":1010:1025  uint256 balance */\n      0x00\n        /* \"BeggingContract.sol\":1026:1047  address(this).balance */\n      selfbalance\n        /* \"BeggingContract.sol\":1010:1047  uint256 balance=address(this).balance */\n      swap1\n      pop\n        /* \"BeggingContract.sol\":1073:1074  0 */\n      0x00\n        /* \"BeggingContract.sol\":1065:1072  balance */\n      dup2\n        /* \"BeggingContract.sol\":1065:1074  balance>0 */\n      gt\n        /* \"BeggingContract.sol\":1057:1100  require(balance>0,\"not sufficient balance\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"BeggingContract.sol\":1118:1128  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":1110:1138  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BeggingContract.sol\":1110:1147  payable(msg.sender).transfer(balance) */\n      0x08fc\n        /* \"BeggingContract.sol\":1139:1146  balance */\n      dup3\n        /* \"BeggingContract.sol\":1110:1147  payable(msg.sender).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n        /* \"BeggingContract.sol\":1232:1233  0 */\n      0x00\n        /* \"BeggingContract.sol\":1219:1231  totalBalance */\n      0x02\n        /* \"BeggingContract.sol\":1219:1233  totalBalance=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BeggingContract.sol\":1248:1297  EventWithDraw(msg.sender,balance,block.timestamp) */\n      0x21e653f2859f08084f97005c2158a35421f54c330007c23268d96ee0253b3937\n        /* \"BeggingContract.sol\":1262:1272  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":1273:1280  balance */\n      dup3\n        /* \"BeggingContract.sol\":1281:1296  block.timestamp */\n      timestamp\n        /* \"BeggingContract.sol\":1248:1297  EventWithDraw(msg.sender,balance,block.timestamp) */\n      mload(0x40)\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BeggingContract.sol\":1000:1304  {... */\n      pop\n        /* \"BeggingContract.sol\":964:1304  function withDraw() public onlyOwner{... */\n      jump\t// out\n        /* \"BeggingContract.sol\":808:915  function getDonation(address from) public view returns(uint256 amount){... */\n    tag_21:\n        /* \"BeggingContract.sol\":863:877  uint256 amount */\n      0x00\n        /* \"BeggingContract.sol\":895:902  records */\n      0x01\n        /* \"BeggingContract.sol\":895:908  records[from] */\n      0x00\n        /* \"BeggingContract.sol\":903:907  from */\n      dup4\n        /* \"BeggingContract.sol\":895:908  records[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BeggingContract.sol\":888:908  return records[from] */\n      swap1\n      pop\n        /* \"BeggingContract.sol\":808:915  function getDonation(address from) public view returns(uint256 amount){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BeggingContract.sol\":192:232  mapping(address=>uint256) public records */\n    tag_27:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BeggingContract.sol\":261:288  uint256 public totalBalance */\n    tag_39:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"BeggingContract.sol\":538:777  function donate() public payable {... */\n    tag_42:\n        /* \"BeggingContract.sol\":599:600  0 */\n      0x00\n        /* \"BeggingContract.sol\":589:598  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":589:600  msg.value>0 */\n      gt\n        /* \"BeggingContract.sol\":581:624  require(msg.value>0,\"insufficient payment\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"BeggingContract.sol\":655:664  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":634:641  records */\n      0x01\n        /* \"BeggingContract.sol\":634:653  records[msg.sender] */\n      0x00\n        /* \"BeggingContract.sol\":642:652  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":634:653  records[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"BeggingContract.sol\":634:664  records[msg.sender]+=msg.value */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BeggingContract.sol\":690:699  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":674:686  totalBalance */\n      0x02\n      0x00\n        /* \"BeggingContract.sol\":674:699  totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_71\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BeggingContract.sol\":714:770  EventDonateSuccess(msg.sender,msg.value,block.timestamp) */\n      0x6081476277fe3b0d4340f7d352df07a683c2de05e128f1495e98ae807477a09a\n        /* \"BeggingContract.sol\":733:743  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":744:753  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":754:769  block.timestamp */\n      timestamp\n        /* \"BeggingContract.sol\":714:770  EventDonateSuccess(msg.sender,msg.value,block.timestamp) */\n      mload(0x40)\n      tag_72\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BeggingContract.sol\":538:777  function donate() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_76\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_92:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_110\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_91\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_93:\n        /* \"#utility.yul\":641:665   */\n      tag_112\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_92\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_113:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_94:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_115\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_93\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_118\n      tag_89\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":917:1036   */\n    tag_117:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_119\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_94\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_95:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_96:\n        /* \"#utility.yul\":1346:1370   */\n      tag_122\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_95\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_23:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_124\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_96\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_97:\n        /* \"#utility.yul\":1698:1722   */\n      tag_126\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_36:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_128\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_97\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_98:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2310   */\n    tag_99:\n        /* \"#utility.yul\":2278:2302   */\n      0x6e6f742073756666696369656e742062616c616e636500000000000000000000\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2303   */\n      mstore\n        /* \"#utility.yul\":2138:2310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2316:2682   */\n    tag_100:\n        /* \"#utility.yul\":2458:2461   */\n      0x00\n        /* \"#utility.yul\":2479:2546   */\n      tag_132\n        /* \"#utility.yul\":2543:2545   */\n      0x16\n        /* \"#utility.yul\":2538:2541   */\n      dup4\n        /* \"#utility.yul\":2479:2546   */\n      tag_98\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2472:2546   */\n      swap2\n      pop\n        /* \"#utility.yul\":2555:2648   */\n      tag_133\n        /* \"#utility.yul\":2644:2647   */\n      dup3\n        /* \"#utility.yul\":2555:2648   */\n      tag_99\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2668:2671   */\n      dup3\n        /* \"#utility.yul\":2664:2676   */\n      add\n        /* \"#utility.yul\":2657:2676   */\n      swap1\n      pop\n        /* \"#utility.yul\":2316:2682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:3107   */\n    tag_53:\n        /* \"#utility.yul\":2854:2858   */\n      0x00\n        /* \"#utility.yul\":2892:2894   */\n      0x20\n        /* \"#utility.yul\":2881:2890   */\n      dup3\n        /* \"#utility.yul\":2877:2895   */\n      add\n        /* \"#utility.yul\":2869:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2950   */\n      dup2\n        /* \"#utility.yul\":2935:2939   */\n      dup2\n        /* \"#utility.yul\":2931:2951   */\n      sub\n        /* \"#utility.yul\":2927:2928   */\n      0x00\n        /* \"#utility.yul\":2916:2925   */\n      dup4\n        /* \"#utility.yul\":2912:2929   */\n      add\n        /* \"#utility.yul\":2905:2952   */\n      mstore\n        /* \"#utility.yul\":2969:3100   */\n      tag_135\n        /* \"#utility.yul\":3095:3099   */\n      dup2\n        /* \"#utility.yul\":2969:3100   */\n      tag_100\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2961:3100   */\n      swap1\n      pop\n        /* \"#utility.yul\":2688:3107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3113:3555   */\n    tag_57:\n        /* \"#utility.yul\":3262:3266   */\n      0x00\n        /* \"#utility.yul\":3300:3302   */\n      0x60\n        /* \"#utility.yul\":3289:3298   */\n      dup3\n        /* \"#utility.yul\":3285:3303   */\n      add\n        /* \"#utility.yul\":3277:3303   */\n      swap1\n      pop\n        /* \"#utility.yul\":3313:3384   */\n      tag_137\n        /* \"#utility.yul\":3381:3382   */\n      0x00\n        /* \"#utility.yul\":3370:3379   */\n      dup4\n        /* \"#utility.yul\":3366:3383   */\n      add\n        /* \"#utility.yul\":3357:3363   */\n      dup7\n        /* \"#utility.yul\":3313:3384   */\n      tag_97\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3394:3466   */\n      tag_138\n        /* \"#utility.yul\":3462:3464   */\n      0x20\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3465   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup6\n        /* \"#utility.yul\":3394:3466   */\n      tag_96\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3476:3548   */\n      tag_139\n        /* \"#utility.yul\":3544:3546   */\n      0x40\n        /* \"#utility.yul\":3533:3542   */\n      dup4\n        /* \"#utility.yul\":3529:3547   */\n      add\n        /* \"#utility.yul\":3520:3526   */\n      dup5\n        /* \"#utility.yul\":3476:3548   */\n      tag_96\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3113:3555   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3561:3731   */\n    tag_101:\n        /* \"#utility.yul\":3701:3723   */\n      0x696e73756666696369656e74207061796d656e74000000000000000000000000\n        /* \"#utility.yul\":3697:3698   */\n      0x00\n        /* \"#utility.yul\":3689:3695   */\n      dup3\n        /* \"#utility.yul\":3685:3699   */\n      add\n        /* \"#utility.yul\":3678:3724   */\n      mstore\n        /* \"#utility.yul\":3561:3731   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3737:4103   */\n    tag_102:\n        /* \"#utility.yul\":3879:3882   */\n      0x00\n        /* \"#utility.yul\":3900:3967   */\n      tag_142\n        /* \"#utility.yul\":3964:3966   */\n      0x14\n        /* \"#utility.yul\":3959:3962   */\n      dup4\n        /* \"#utility.yul\":3900:3967   */\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3893:3967   */\n      swap2\n      pop\n        /* \"#utility.yul\":3976:4069   */\n      tag_143\n        /* \"#utility.yul\":4065:4068   */\n      dup3\n        /* \"#utility.yul\":3976:4069   */\n      tag_101\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4094:4096   */\n      0x20\n        /* \"#utility.yul\":4089:4092   */\n      dup3\n        /* \"#utility.yul\":4085:4097   */\n      add\n        /* \"#utility.yul\":4078:4097   */\n      swap1\n      pop\n        /* \"#utility.yul\":3737:4103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4109:4528   */\n    tag_68:\n        /* \"#utility.yul\":4275:4279   */\n      0x00\n        /* \"#utility.yul\":4313:4315   */\n      0x20\n        /* \"#utility.yul\":4302:4311   */\n      dup3\n        /* \"#utility.yul\":4298:4316   */\n      add\n        /* \"#utility.yul\":4290:4316   */\n      swap1\n      pop\n        /* \"#utility.yul\":4362:4371   */\n      dup2\n        /* \"#utility.yul\":4356:4360   */\n      dup2\n        /* \"#utility.yul\":4352:4372   */\n      sub\n        /* \"#utility.yul\":4348:4349   */\n      0x00\n        /* \"#utility.yul\":4337:4346   */\n      dup4\n        /* \"#utility.yul\":4333:4350   */\n      add\n        /* \"#utility.yul\":4326:4373   */\n      mstore\n        /* \"#utility.yul\":4390:4521   */\n      tag_145\n        /* \"#utility.yul\":4516:4520   */\n      dup2\n        /* \"#utility.yul\":4390:4521   */\n      tag_102\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4382:4521   */\n      swap1\n      pop\n        /* \"#utility.yul\":4109:4528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4534:4714   */\n    tag_103:\n        /* \"#utility.yul\":4582:4659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4579:4580   */\n      0x00\n        /* \"#utility.yul\":4572:4660   */\n      mstore\n        /* \"#utility.yul\":4679:4683   */\n      0x11\n        /* \"#utility.yul\":4676:4677   */\n      0x04\n        /* \"#utility.yul\":4669:4684   */\n      mstore\n        /* \"#utility.yul\":4703:4707   */\n      0x24\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4693:4708   */\n      revert\n        /* \"#utility.yul\":4720:4911   */\n    tag_70:\n        /* \"#utility.yul\":4760:4763   */\n      0x00\n        /* \"#utility.yul\":4779:4799   */\n      tag_148\n        /* \"#utility.yul\":4797:4798   */\n      dup3\n        /* \"#utility.yul\":4779:4799   */\n      tag_95\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4774:4799   */\n      swap2\n      pop\n        /* \"#utility.yul\":4813:4833   */\n      tag_149\n        /* \"#utility.yul\":4831:4832   */\n      dup4\n        /* \"#utility.yul\":4813:4833   */\n      tag_95\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4808:4833   */\n      swap3\n      pop\n        /* \"#utility.yul\":4856:4857   */\n      dup3\n        /* \"#utility.yul\":4853:4854   */\n      dup3\n        /* \"#utility.yul\":4849:4858   */\n      add\n        /* \"#utility.yul\":4842:4858   */\n      swap1\n      pop\n        /* \"#utility.yul\":4877:4880   */\n      dup1\n        /* \"#utility.yul\":4874:4875   */\n      dup3\n        /* \"#utility.yul\":4871:4881   */\n      gt\n        /* \"#utility.yul\":4868:4904   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4884:4902   */\n      tag_151\n      tag_103\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4868:4904   */\n    tag_150:\n        /* \"#utility.yul\":4720:4911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200fa6684d0e05c74ebf3a6317e67d4d0bf5991910efaf1d4dc3f8eb8b54f1fe0b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b61086f806101bc5f395ff3fe60806040526004361061007e575f3560e01c80638da5cb5b1161004d5780638da5cb5b1461012d578063ad7a672f14610157578063ed88c68e14610181578063f2fde38b1461018b57610085565b80630fdb1c1014610089578063410a1d321461009f578063469e9067146100db578063715018a61461011757610085565b3661008557005b5f5ffd5b348015610094575f5ffd5b5061009d6101b3565b005b3480156100aa575f5ffd5b506100c560048036038101906100c09190610640565b61028a565b6040516100d29190610683565b60405180910390f35b3480156100e6575f5ffd5b5061010160048036038101906100fc9190610640565b6102d0565b60405161010e9190610683565b60405180910390f35b348015610122575f5ffd5b5061012b6102e5565b005b348015610138575f5ffd5b506101416102f8565b60405161014e91906106ab565b60405180910390f35b348015610162575f5ffd5b5061016b61031f565b6040516101789190610683565b60405180910390f35b610189610325565b005b348015610196575f5ffd5b506101b160048036038101906101ac9190610640565b61040f565b005b6101bb610493565b5f4790505f8111610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f89061071e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610244573d5f5f3e3d5ffd5b505f6002819055507f21e653f2859f08084f97005c2158a35421f54c330007c23268d96ee0253b393733824260405161027f9392919061073c565b60405180910390a150565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6001602052805f5260405f205f915090505481565b6102ed610493565b6102f65f61051a565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f3411610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906107bb565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103b39190610806565b925050819055503460025f8282546103cb9190610806565b925050819055507f6081476277fe3b0d4340f7d352df07a683c2de05e128f1495e98ae807477a09a3334426040516104059392919061073c565b60405180910390a1565b610417610493565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610487575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161047e91906106ab565b60405180910390fd5b6104908161051a565b50565b61049b6105db565b73ffffffffffffffffffffffffffffffffffffffff166104b96102f8565b73ffffffffffffffffffffffffffffffffffffffff1614610518576104dc6105db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161050f91906106ab565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61060f826105e6565b9050919050565b61061f81610605565b8114610629575f5ffd5b50565b5f8135905061063a81610616565b92915050565b5f60208284031215610655576106546105e2565b5b5f6106628482850161062c565b91505092915050565b5f819050919050565b61067d8161066b565b82525050565b5f6020820190506106965f830184610674565b92915050565b6106a581610605565b82525050565b5f6020820190506106be5f83018461069c565b92915050565b5f82825260208201905092915050565b7f6e6f742073756666696369656e742062616c616e6365000000000000000000005f82015250565b5f6107086016836106c4565b9150610713826106d4565b602082019050919050565b5f6020820190508181035f830152610735816106fc565b9050919050565b5f60608201905061074f5f83018661069c565b61075c6020830185610674565b6107696040830184610674565b949350505050565b7f696e73756666696369656e74207061796d656e740000000000000000000000005f82015250565b5f6107a56014836106c4565b91506107b082610771565b602082019050919050565b5f6020820190508181035f8301526107d281610799565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108108261066b565b915061081b8361066b565b9250828201905080821115610833576108326107d9565b5b9291505056fea26469706673582212200fa6684d0e05c74ebf3a6317e67d4d0bf5991910efaf1d4dc3f8eb8b54f1fe0b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86F DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18B JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x469E9067 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x117 JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x31F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH2 0x493 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x21E653F2859F08084F97005C2158A35421F54C330007C23268D96EE0253B3937 CALLER DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x27F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x493 JUMP JUMPDEST PUSH2 0x2F6 PUSH0 PUSH2 0x51A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35E SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x6081476277FE3B0D4340F7D352DF07A683C2DE05E128F1495E98AE807477A09A CALLER CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x405 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x493 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x487 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x51A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x49B PUSH2 0x5DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B9 PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x518 JUMPI PUSH2 0x4DC PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x60F DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x605 JUMP JUMPDEST DUP2 EQ PUSH2 0x629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x63A DUP2 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x655 JUMPI PUSH2 0x654 PUSH2 0x5E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x662 DUP5 DUP3 DUP6 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67D DUP2 PUSH2 0x66B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH0 DUP4 ADD DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH0 DUP4 ADD DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E742062616C616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x16 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x713 DUP3 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x735 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x74F PUSH0 DUP4 ADD DUP7 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x75C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x769 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74207061796D656E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 PUSH1 0x14 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B0 DUP3 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7D2 DUP2 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x810 DUP3 PUSH2 0x66B JUMP JUMPDEST SWAP2 POP PUSH2 0x81B DUP4 PUSH2 0x66B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x833 JUMPI PUSH2 0x832 PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA6 PUSH9 0x4D0E05C74EBF3A6317 DUPN 0x7D 0x4D SIGNEXTEND CREATE2 SWAP10 NOT LT 0xEF 0xAF SAR 0x4D 0xC3 EXTCALL 0xEB DUP12 SLOAD CALL INVALID SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "137:1170:2:-:0;;;295:41;;;;;;;;;;317:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;137:1170:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;137:1170:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1171,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1499,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1306,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_250": {
									"entryPoint": 805,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDonation_262": {
									"entryPoint": 650,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 760,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@records_186": {
									"entryPoint": 720,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 741,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBalance_188": {
									"entryPoint": 799,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1039,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withDraw_304": {
									"entryPoint": 435,
									"id": 304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4914:3",
										"nodeType": "YulBlock",
										"src": "0:4914:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1221:32:3",
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nativeSrc": "1231:16:3",
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:3",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:3",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:3",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1676:53:3",
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nativeSrc": "1698:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nativeSrc": "1686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nativeSrc": "1686:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:3",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:3",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nativeSrc": "1833:124:3",
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nativeSrc": "1843:26:3",
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nativeSrc": "1851:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nativeSrc": "1932:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nativeSrc": "1879:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nativeSrc": "1879:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:3",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:3",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:3",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nativeSrc": "2059:73:3",
													"nodeType": "YulBlock",
													"src": "2059:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:3"
																},
																"nativeSrc": "2069:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2069:19:3"
															},
															"nativeSrc": "2069:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:3"
														},
														{
															"nativeSrc": "2097:29:3",
															"nodeType": "YulAssignment",
															"src": "2097:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2116:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:3"
																},
																"nativeSrc": "2112:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2112:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2097:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1963:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2031:3:3",
														"nodeType": "YulTypedName",
														"src": "2031:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2036:6:3",
														"nodeType": "YulTypedName",
														"src": "2036:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2047:11:3",
														"nodeType": "YulTypedName",
														"src": "2047:11:3",
														"type": ""
													}
												],
												"src": "1963:169:3"
											},
											{
												"body": {
													"nativeSrc": "2244:66:3",
													"nodeType": "YulBlock",
													"src": "2244:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2266:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2262:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:3"
																		},
																		"nativeSrc": "2262:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:3"
																	},
																	{
																		"hexValue": "6e6f742073756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "2278:24:3",
																		"nodeType": "YulLiteral",
																		"src": "2278:24:3",
																		"type": "",
																		"value": "not sufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:3"
																},
																"nativeSrc": "2255:48:3",
																"nodeType": "YulFunctionCall",
																"src": "2255:48:3"
															},
															"nativeSrc": "2255:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "2255:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
												"nativeSrc": "2138:172:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2236:6:3",
														"nodeType": "YulTypedName",
														"src": "2236:6:3",
														"type": ""
													}
												],
												"src": "2138:172:3"
											},
											{
												"body": {
													"nativeSrc": "2462:220:3",
													"nodeType": "YulBlock",
													"src": "2462:220:3",
													"statements": [
														{
															"nativeSrc": "2472:74:3",
															"nodeType": "YulAssignment",
															"src": "2472:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2538:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2538:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2543:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2479:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2479:58:3"
																},
																"nativeSrc": "2479:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2479:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2472:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2644:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
																	"nativeSrc": "2555:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2555:88:3"
																},
																"nativeSrc": "2555:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2555:93:3"
															},
															"nativeSrc": "2555:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2555:93:3"
														},
														{
															"nativeSrc": "2657:19:3",
															"nodeType": "YulAssignment",
															"src": "2657:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2668:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2668:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2664:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:3"
																},
																"nativeSrc": "2664:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2664:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2657:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2657:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2316:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2450:3:3",
														"nodeType": "YulTypedName",
														"src": "2450:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2458:3:3",
														"nodeType": "YulTypedName",
														"src": "2458:3:3",
														"type": ""
													}
												],
												"src": "2316:366:3"
											},
											{
												"body": {
													"nativeSrc": "2859:248:3",
													"nodeType": "YulBlock",
													"src": "2859:248:3",
													"statements": [
														{
															"nativeSrc": "2869:26:3",
															"nodeType": "YulAssignment",
															"src": "2869:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2881:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2881:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2892:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2877:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2877:3:3"
																},
																"nativeSrc": "2877:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2877:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2869:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2869:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2916:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2916:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2927:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2927:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2912:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2912:3:3"
																		},
																		"nativeSrc": "2912:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2912:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2935:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2935:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2941:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2941:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2931:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:3"
																		},
																		"nativeSrc": "2931:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2931:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2905:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:3"
																},
																"nativeSrc": "2905:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2905:47:3"
															},
															"nativeSrc": "2905:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2905:47:3"
														},
														{
															"nativeSrc": "2961:139:3",
															"nodeType": "YulAssignment",
															"src": "2961:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3095:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3095:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2969:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "2969:124:3"
																},
																"nativeSrc": "2969:131:3",
																"nodeType": "YulFunctionCall",
																"src": "2969:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2961:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2961:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2688:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2839:9:3",
														"nodeType": "YulTypedName",
														"src": "2839:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2854:4:3",
														"nodeType": "YulTypedName",
														"src": "2854:4:3",
														"type": ""
													}
												],
												"src": "2688:419:3"
											},
											{
												"body": {
													"nativeSrc": "3267:288:3",
													"nodeType": "YulBlock",
													"src": "3267:288:3",
													"statements": [
														{
															"nativeSrc": "3277:26:3",
															"nodeType": "YulAssignment",
															"src": "3277:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3289:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3289:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3300:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3300:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3285:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:3"
																},
																"nativeSrc": "3285:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3285:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3277:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3277:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3357:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3357:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3370:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3381:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3381:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3366:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:3"
																		},
																		"nativeSrc": "3366:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3366:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3313:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3313:43:3"
																},
																"nativeSrc": "3313:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3313:71:3"
															},
															"nativeSrc": "3313:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3313:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3438:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3462:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:3"
																		},
																		"nativeSrc": "3447:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3394:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:3"
																},
																"nativeSrc": "3394:72:3",
																"nodeType": "YulFunctionCall",
																"src": "3394:72:3"
															},
															"nativeSrc": "3394:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "3394:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3520:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3520:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3533:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3544:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3544:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3529:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:3"
																		},
																		"nativeSrc": "3529:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3529:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3476:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3476:43:3"
																},
																"nativeSrc": "3476:72:3",
																"nodeType": "YulFunctionCall",
																"src": "3476:72:3"
															},
															"nativeSrc": "3476:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "3476:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3113:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3223:9:3",
														"nodeType": "YulTypedName",
														"src": "3223:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3235:6:3",
														"nodeType": "YulTypedName",
														"src": "3235:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3243:6:3",
														"nodeType": "YulTypedName",
														"src": "3243:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3251:6:3",
														"nodeType": "YulTypedName",
														"src": "3251:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3262:4:3",
														"nodeType": "YulTypedName",
														"src": "3262:4:3",
														"type": ""
													}
												],
												"src": "3113:442:3"
											},
											{
												"body": {
													"nativeSrc": "3667:64:3",
													"nodeType": "YulBlock",
													"src": "3667:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3689:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3689:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3697:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3697:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3685:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:3"
																		},
																		"nativeSrc": "3685:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:14:3"
																	},
																	{
																		"hexValue": "696e73756666696369656e74207061796d656e74",
																		"kind": "string",
																		"nativeSrc": "3701:22:3",
																		"nodeType": "YulLiteral",
																		"src": "3701:22:3",
																		"type": "",
																		"value": "insufficient payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3678:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3678:6:3"
																},
																"nativeSrc": "3678:46:3",
																"nodeType": "YulFunctionCall",
																"src": "3678:46:3"
															},
															"nativeSrc": "3678:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "3678:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8",
												"nativeSrc": "3561:170:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3659:6:3",
														"nodeType": "YulTypedName",
														"src": "3659:6:3",
														"type": ""
													}
												],
												"src": "3561:170:3"
											},
											{
												"body": {
													"nativeSrc": "3883:220:3",
													"nodeType": "YulBlock",
													"src": "3883:220:3",
													"statements": [
														{
															"nativeSrc": "3893:74:3",
															"nodeType": "YulAssignment",
															"src": "3893:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3959:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3959:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3964:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3900:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3900:58:3"
																},
																"nativeSrc": "3900:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3900:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3893:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4065:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4065:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8",
																	"nativeSrc": "3976:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3976:88:3"
																},
																"nativeSrc": "3976:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3976:93:3"
															},
															"nativeSrc": "3976:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3976:93:3"
														},
														{
															"nativeSrc": "4078:19:3",
															"nodeType": "YulAssignment",
															"src": "4078:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4089:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4089:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4094:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4094:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4085:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:3"
																},
																"nativeSrc": "4085:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4085:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4078:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4078:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3737:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3871:3:3",
														"nodeType": "YulTypedName",
														"src": "3871:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3879:3:3",
														"nodeType": "YulTypedName",
														"src": "3879:3:3",
														"type": ""
													}
												],
												"src": "3737:366:3"
											},
											{
												"body": {
													"nativeSrc": "4280:248:3",
													"nodeType": "YulBlock",
													"src": "4280:248:3",
													"statements": [
														{
															"nativeSrc": "4290:26:3",
															"nodeType": "YulAssignment",
															"src": "4290:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4302:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4302:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4313:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4298:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4298:3:3"
																},
																"nativeSrc": "4298:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4298:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4290:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4290:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4337:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4337:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4348:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4348:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4333:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4333:3:3"
																		},
																		"nativeSrc": "4333:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4356:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4356:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4352:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4352:3:3"
																		},
																		"nativeSrc": "4352:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4352:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4326:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4326:6:3"
																},
																"nativeSrc": "4326:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4326:47:3"
															},
															"nativeSrc": "4326:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4326:47:3"
														},
														{
															"nativeSrc": "4382:139:3",
															"nodeType": "YulAssignment",
															"src": "4382:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4516:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4516:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4390:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4390:124:3"
																},
																"nativeSrc": "4390:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4390:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4382:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4382:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4109:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4260:9:3",
														"nodeType": "YulTypedName",
														"src": "4260:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4275:4:3",
														"nodeType": "YulTypedName",
														"src": "4275:4:3",
														"type": ""
													}
												],
												"src": "4109:419:3"
											},
											{
												"body": {
													"nativeSrc": "4562:152:3",
													"nodeType": "YulBlock",
													"src": "4562:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4579:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4579:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4582:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4582:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4572:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:3"
																},
																"nativeSrc": "4572:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4572:88:3"
															},
															"nativeSrc": "4572:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4572:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4676:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4676:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4679:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4679:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4669:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:3"
																},
																"nativeSrc": "4669:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4669:15:3"
															},
															"nativeSrc": "4669:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4669:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4700:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4700:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4703:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4703:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4693:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:3"
																},
																"nativeSrc": "4693:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4693:15:3"
															},
															"nativeSrc": "4693:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4693:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4534:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4534:180:3"
											},
											{
												"body": {
													"nativeSrc": "4764:147:3",
													"nodeType": "YulBlock",
													"src": "4764:147:3",
													"statements": [
														{
															"nativeSrc": "4774:25:3",
															"nodeType": "YulAssignment",
															"src": "4774:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4797:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4797:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4779:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4779:17:3"
																},
																"nativeSrc": "4779:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4779:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4774:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4774:1:3"
																}
															]
														},
														{
															"nativeSrc": "4808:25:3",
															"nodeType": "YulAssignment",
															"src": "4808:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4831:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4831:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4813:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4813:17:3"
																},
																"nativeSrc": "4813:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4813:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4808:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4808:1:3"
																}
															]
														},
														{
															"nativeSrc": "4842:16:3",
															"nodeType": "YulAssignment",
															"src": "4842:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4853:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4853:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4856:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4856:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4849:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4849:3:3"
																},
																"nativeSrc": "4849:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4849:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4842:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4882:22:3",
																"nodeType": "YulBlock",
																"src": "4882:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4884:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4884:16:3"
																			},
																			"nativeSrc": "4884:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4884:18:3"
																		},
																		"nativeSrc": "4884:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4884:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4874:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4874:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4877:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4877:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4871:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4871:2:3"
																},
																"nativeSrc": "4871:10:3",
																"nodeType": "YulFunctionCall",
																"src": "4871:10:3"
															},
															"nativeSrc": "4868:36:3",
															"nodeType": "YulIf",
															"src": "4868:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4720:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4751:1:3",
														"nodeType": "YulTypedName",
														"src": "4751:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4754:1:3",
														"nodeType": "YulTypedName",
														"src": "4754:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4760:3:3",
														"nodeType": "YulTypedName",
														"src": "4760:3:3",
														"type": ""
													}
												],
												"src": "4720:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26(memPtr) {\n\n        mstore(add(memPtr, 0), \"not sufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient payment\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007e575f3560e01c80638da5cb5b1161004d5780638da5cb5b1461012d578063ad7a672f14610157578063ed88c68e14610181578063f2fde38b1461018b57610085565b80630fdb1c1014610089578063410a1d321461009f578063469e9067146100db578063715018a61461011757610085565b3661008557005b5f5ffd5b348015610094575f5ffd5b5061009d6101b3565b005b3480156100aa575f5ffd5b506100c560048036038101906100c09190610640565b61028a565b6040516100d29190610683565b60405180910390f35b3480156100e6575f5ffd5b5061010160048036038101906100fc9190610640565b6102d0565b60405161010e9190610683565b60405180910390f35b348015610122575f5ffd5b5061012b6102e5565b005b348015610138575f5ffd5b506101416102f8565b60405161014e91906106ab565b60405180910390f35b348015610162575f5ffd5b5061016b61031f565b6040516101789190610683565b60405180910390f35b610189610325565b005b348015610196575f5ffd5b506101b160048036038101906101ac9190610640565b61040f565b005b6101bb610493565b5f4790505f8111610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f89061071e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610244573d5f5f3e3d5ffd5b505f6002819055507f21e653f2859f08084f97005c2158a35421f54c330007c23268d96ee0253b393733824260405161027f9392919061073c565b60405180910390a150565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6001602052805f5260405f205f915090505481565b6102ed610493565b6102f65f61051a565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f3411610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906107bb565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103b39190610806565b925050819055503460025f8282546103cb9190610806565b925050819055507f6081476277fe3b0d4340f7d352df07a683c2de05e128f1495e98ae807477a09a3334426040516104059392919061073c565b60405180910390a1565b610417610493565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610487575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161047e91906106ab565b60405180910390fd5b6104908161051a565b50565b61049b6105db565b73ffffffffffffffffffffffffffffffffffffffff166104b96102f8565b73ffffffffffffffffffffffffffffffffffffffff1614610518576104dc6105db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161050f91906106ab565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61060f826105e6565b9050919050565b61061f81610605565b8114610629575f5ffd5b50565b5f8135905061063a81610616565b92915050565b5f60208284031215610655576106546105e2565b5b5f6106628482850161062c565b91505092915050565b5f819050919050565b61067d8161066b565b82525050565b5f6020820190506106965f830184610674565b92915050565b6106a581610605565b82525050565b5f6020820190506106be5f83018461069c565b92915050565b5f82825260208201905092915050565b7f6e6f742073756666696369656e742062616c616e6365000000000000000000005f82015250565b5f6107086016836106c4565b9150610713826106d4565b602082019050919050565b5f6020820190508181035f830152610735816106fc565b9050919050565b5f60608201905061074f5f83018661069c565b61075c6020830185610674565b6107696040830184610674565b949350505050565b7f696e73756666696369656e74207061796d656e740000000000000000000000005f82015250565b5f6107a56014836106c4565b91506107b082610771565b602082019050919050565b5f6020820190508181035f8301526107d281610799565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108108261066b565b915061081b8361066b565b9250828201905080821115610833576108326107d9565b5b9291505056fea26469706673582212200fa6684d0e05c74ebf3a6317e67d4d0bf5991910efaf1d4dc3f8eb8b54f1fe0b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18B JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x469E9067 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x117 JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x31F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH2 0x493 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x21E653F2859F08084F97005C2158A35421F54C330007C23268D96EE0253B3937 CALLER DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x27F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x493 JUMP JUMPDEST PUSH2 0x2F6 PUSH0 PUSH2 0x51A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35E SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x6081476277FE3B0D4340F7D352DF07A683C2DE05E128F1495E98AE807477A09A CALLER CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x405 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x493 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x487 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x51A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x49B PUSH2 0x5DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B9 PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x518 JUMPI PUSH2 0x4DC PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x60F DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x605 JUMP JUMPDEST DUP2 EQ PUSH2 0x629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x63A DUP2 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x655 JUMPI PUSH2 0x654 PUSH2 0x5E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x662 DUP5 DUP3 DUP6 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67D DUP2 PUSH2 0x66B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH0 DUP4 ADD DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH0 DUP4 ADD DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E742062616C616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x16 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x713 DUP3 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x735 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x74F PUSH0 DUP4 ADD DUP7 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x75C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x769 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74207061796D656E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 PUSH1 0x14 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B0 DUP3 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7D2 DUP2 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x810 DUP3 PUSH2 0x66B JUMP JUMPDEST SWAP2 POP PUSH2 0x81B DUP4 PUSH2 0x66B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x833 JUMPI PUSH2 0x832 PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA6 PUSH9 0x4D0E05C74EBF3A6317 DUPN 0x7D 0x4D SIGNEXTEND CREATE2 SWAP10 NOT LT 0xEF 0xAF SAR 0x4D 0xC3 EXTCALL 0xEB DUP12 SLOAD CALL INVALID SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "137:1170:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:340;;;;;;;;;;;;;:::i;:::-;;808:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;261:27:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:239;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;964:340:2;1531:13:0;:11;:13::i;:::-;1010:15:2::1;1026:21;1010:37;;1073:1;1065:7;:9;1057:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1118:10;1110:28;;:37;1139:7;1110:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:1;1219:12;:14;;;;1248:49;1262:10;1273:7;1281:15;1248:49;;;;;;;;:::i;:::-;;;;;;;;1000:304;964:340::o:0;808:107::-;863:14;895:7;:13;903:4;895:13;;;;;;;;;;;;;;;;888:20;;808:107;;;:::o;192:40::-;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;261:27:2:-;;;;:::o;538:239::-;599:1;589:9;:11;581:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;655:9;634:7;:19;642:10;634:19;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;690:9;674:12;;:25;;;;;;;:::i;:::-;;;;;;;;714:56;733:10;744:9;754:15;714:56;;;;;;;;:::i;:::-;;;;;;;;538:239::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:172::-;2278:24;2274:1;2266:6;2262:14;2255:48;2138:172;:::o;2316:366::-;2458:3;2479:67;2543:2;2538:3;2479:67;:::i;:::-;2472:74;;2555:93;2644:3;2555:93;:::i;:::-;2673:2;2668:3;2664:12;2657:19;;2316:366;;;:::o;2688:419::-;2854:4;2892:2;2881:9;2877:18;2869:26;;2941:9;2935:4;2931:20;2927:1;2916:9;2912:17;2905:47;2969:131;3095:4;2969:131;:::i;:::-;2961:139;;2688:419;;;:::o;3113:442::-;3262:4;3300:2;3289:9;3285:18;3277:26;;3313:71;3381:1;3370:9;3366:17;3357:6;3313:71;:::i;:::-;3394:72;3462:2;3451:9;3447:18;3438:6;3394:72;:::i;:::-;3476;3544:2;3533:9;3529:18;3520:6;3476:72;:::i;:::-;3113:442;;;;;;:::o;3561:170::-;3701:22;3697:1;3689:6;3685:14;3678:46;3561:170;:::o;3737:366::-;3879:3;3900:67;3964:2;3959:3;3900:67;:::i;:::-;3893:74;;3976:93;4065:3;3976:93;:::i;:::-;4094:2;4089:3;4085:12;4078:19;;3737:366;;;:::o;4109:419::-;4275:4;4313:2;4302:9;4298:18;4290:26;;4362:9;4356:4;4352:20;4348:1;4337:9;4333:17;4326:47;4390:131;4516:4;4390:131;:::i;:::-;4382:139;;4109:419;;;:::o;4534:180::-;4582:77;4579:1;4572:88;4679:4;4676:1;4669:15;4703:4;4700:1;4693:15;4720:191;4760:3;4779:20;4797:1;4779:20;:::i;:::-;4774:25;;4813:20;4831:1;4813:20;:::i;:::-;4808:25;;4856:1;4853;4849:9;4842:16;;4877:3;4874:1;4871:10;4868:36;;;4884:18;;:::i;:::-;4868:36;4720:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "431800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate()": "infinite",
								"getDonation(address)": "2852",
								"owner()": "2514",
								"records(address)": "2847",
								"renounceOwnership()": "infinite",
								"totalBalance()": "2447",
								"transferOwnership(address)": "infinite",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 336,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 336,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 336,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 336,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 295,
									"end": 336,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 317,
									"end": 327,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1307,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200fa6684d0e05c74ebf3a6317e67d4d0bf5991910efaf1d4dc3f8eb8b54f1fe0b64736f6c634300081e0033",
									".code": [
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "AD7A672F"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "ED88C68E"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "FDB1C10"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "469E9067"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 964,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 808,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 808,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 261,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 261,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 261,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 538,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 538,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 538,
											"end": 777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 964,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1047,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1074,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1057,
											"end": 1100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1057,
											"end": 1100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1128,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1110,
											"end": 1138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1139,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "21E653F2859F08084F97005C2158A35421F54C330007C23268D96EE0253B3937"
										},
										{
											"begin": 1262,
											"end": 1272,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1296,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1297,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 808,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 908,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 895,
											"end": 908,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 888,
											"end": 908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 888,
											"end": 908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 288,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 538,
											"end": 777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 589,
											"end": 600,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 581,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 581,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 581,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 664,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 652,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 634,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 634,
											"end": 664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 699,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 686,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 674,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 674,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "6081476277FE3B0D4340F7D352DF07A683C2DE05E128F1495E98AE807477A09A"
										},
										{
											"begin": 733,
											"end": 743,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 744,
											"end": 753,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 754,
											"end": 769,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 714,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 714,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 714,
											"end": 770,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 538,
											"end": 777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2138,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2302,
											"name": "PUSH",
											"source": 3,
											"value": "6E6F742073756666696369656E742062616C616E636500000000000000000000"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2682,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2538,
											"end": 2541,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2479,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2546,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2479,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2644,
											"end": 2647,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2555,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2648,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2555,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2676,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 2895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 2895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2950,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2925,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2969,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3100,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2969,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 3100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 3100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3357,
											"end": 3363,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3313,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3384,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3313,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3462,
											"end": 3464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3394,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3466,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3394,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3476,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3731,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3561,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "PUSH",
											"source": 3,
											"value": "696E73756666696369656E74207061796D656E74000000000000000000000000"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4103,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3737,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3959,
											"end": 3962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3900,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3967,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3900,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4065,
											"end": 4068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3976,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4069,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3976,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 4103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4528,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4109,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4302,
											"end": 4311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4390,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4390,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4390,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4390,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4390,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4534,
											"end": 4714,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4534,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4582,
											"end": 4659,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4579,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4669,
											"end": 4684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4707,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4708,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4779,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4813,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4871,
											"end": 4881,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4868,
											"end": 4904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4884,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4904,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4868,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BeggingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"getDonation(address)": "410a1d32",
							"owner()": "8da5cb5b",
							"records(address)": "469e9067",
							"renounceOwnership()": "715018a6",
							"totalBalance()": "ad7a672f",
							"transferOwnership(address)": "f2fde38b",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EventDonateSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EventWithDraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"records\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BeggingContract.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"BeggingContract.sol\":{\"keccak256\":\"0x245d4e322d7222175c92e9b24d20100172c24ed85565bda1c63d0b92c8abd3dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a8aea7ce4fe30774464d6319e79c6e62b0d568239eb818cf1a3675a17510c93\",\"dweb:/ipfs/QmWzw3BPRPCpSxPAPpBaEumfv5s3cFeQJVD5fgJMbfxJA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "BeggingContract.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "BeggingContract.sol:BeggingContract",
								"label": "records",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 188,
								"contract": "BeggingContract.sol:BeggingContract",
								"label": "totalBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"BeggingContract.sol": {
				"ast": {
					"absolutePath": "BeggingContract.sol",
					"exportedSymbols": {
						"BeggingContract": [
							305
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 306,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"165:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "165:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "165:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 305,
							"linearizedBaseContracts": [
								305,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "146:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "469e9067",
									"id": 186,
									"mutability": "mutable",
									"name": "records",
									"nameLocation": "225:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 305,
									"src": "192:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "200:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "192:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "209:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad7a672f",
									"id": 188,
									"mutability": "mutable",
									"name": "totalBalance",
									"nameLocation": "276:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 305,
									"src": "261:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "328:8:2",
										"statements": []
									},
									"id": 196,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 191,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "317:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "321:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "317:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 193,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 190,
												"name": "Ownable",
												"nameLocations": [
													"309:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "309:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "309:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:0:2"
									},
									"scope": 305,
									"src": "295:41:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6081476277fe3b0d4340f7d352df07a683c2de05e128f1495e98ae807477a09a",
									"id": 204,
									"name": "EventDonateSuccess",
									"nameLocation": "347:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "374:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "366:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "387:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "379:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "401:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "393:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:46:2"
									},
									"src": "341:71:2"
								},
								{
									"anonymous": false,
									"eventSelector": "21e653f2859f08084f97005c2158a35421f54c330007c23268d96ee0253b3937",
									"id": 212,
									"name": "EventWithDraw",
									"nameLocation": "423:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "445:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "437:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "458:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "450:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "473:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "465:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:47:2"
									},
									"src": "417:67:2"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "516:3:2",
										"statements": []
									},
									"id": 216,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:0:2"
									},
									"scope": 305,
									"src": "489:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "571:206:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "589:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "593:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "589:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "589:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e74207061796d656e74",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "601:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8",
																"typeString": "literal_string \"insufficient payment\""
															},
															"value": "insufficient payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e9d201eea56f80782967638b28b19571693520909669385a6c2e62f02048f8",
																"typeString": "literal_string \"insufficient payment\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "581:43:2"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"expression": {
																"id": 228,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "642:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "646:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "642:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "634:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 231,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "655:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "659:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "655:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "634:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "634:30:2"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 235,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "674:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 236,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "690:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "694:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "690:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "674:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "674:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "733:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "737:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "733:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "744:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "748:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "744:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 245,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "754:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "760:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "754:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 240,
														"name": "EventDonateSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "714:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "EmitStatement",
												"src": "709:61:2"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "547:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:0:2"
									},
									"scope": 305,
									"src": "538:239:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "878:37:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "895:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "903:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "895:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "888:20:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "817:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "837:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "829:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:14:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "871:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "863:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:16:2"
									},
									"scope": 305,
									"src": "808:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1000:304:2",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1018:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "1010:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1010:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 271,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1034:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BeggingContract_$305",
																	"typeString": "contract BeggingContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BeggingContract_$305",
																	"typeString": "contract BeggingContract"
																}
															],
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1026:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 269,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1026:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1026:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1026:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1010:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1065:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1065:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073756666696369656e742062616c616e6365",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1075:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
																"typeString": "literal_string \"not sufficient balance\""
															},
															"value": "not sufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
																"typeString": "literal_string \"not sufficient balance\""
															}
														],
														"id": 275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1057:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1057:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1118:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1122:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1118:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1110:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1110:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1110:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1130:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1110:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1110:37:2"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1219:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1232:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1219:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1219:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1262:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1266:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1262:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 299,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1281:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1287:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1281:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "EventWithDraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1248:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "EmitStatement",
												"src": "1243:54:2"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 264,
												"name": "onlyOwner",
												"nameLocations": [
													"991:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "991:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:9:2"
										}
									],
									"name": "withDraw",
									"nameLocation": "973:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:0:2"
									},
									"scope": 305,
									"src": "964:340:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 306,
							"src": "137:1170:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								204,
								212
							]
						}
					],
					"src": "32:1275:2"
				},
				"id": 2
			}
		}
	}
}